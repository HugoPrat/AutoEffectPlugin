name: Release

on:
  push:
    branches: [ "main"]

jobs:

  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: version
        run: echo "::set-output name=version::$(cat VERSION.txt)"
        id: version
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ steps.version.outputs.version }}
          draft: false
          prerelease: false
          generate_release_notes: false
          body_path: CHANGELOG.md

  build_release:
    name: Build Release
    needs: create_release
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            release_suffix: ubuntu
          - os: macos-latest
            release_suffix: mac
          - os: windows-latest
            release_suffix: windows
    runs-on: ${{ matrix.os }}
    steps:
        ##Checkout submodules
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ssh-key: ${{ secrets.SUBMODULE_CONTENT_PULL_KEY }}
          submodules: 'recursive'

      - name: Configure Linux Build
        if: matrix.os == 'ubuntu-latest'
        steps:
          - name: Download Libtorch
            run: wget https://download.pytorch.org/libtorch/cpu/libtorch-cxx11-abi-shared-with-deps-1.11.0%2Bcpu.zip
          - name: Unzip it
            run: unzip libtorch-cxx11-abi-shared-with-deps-1.11.0+cpu.zip
          - name: Install Prerequisites
            run: sudo apt-get install libxcursor-dev libxrandr-dev libxinerama-dev libxi-dev libasound2-dev
        #run: echo "Ubuntu Latest" > release_ubuntu
      
      - name: Configure Mac Build
        if: matrix.os == 'macos-latest'
        steps:
          - name: Download Libtorch
            run: wget https://download.pytorch.org/libtorch/cpu/libtorch-macos-1.11.0.zip
          - name: Unzip it
            run: unzip libtorch-macos-1.11.0.zip
#        run: echo "MacOS Latest" > release_mac

      - name: Configure Windows Build
        if: matrix.os == 'windows-latest'
        steps:
          - name: Download Libtorch
            run: wget https://download.pytorch.org/libtorch/cpu/libtorch-win-shared-with-deps-1.11.0%2Bcpu.zip
          - name: Unzip it
            run: unzip libtorch-win-shared-with-deps-1.11.0+cpu.zip
#        run: echo "Windows Latest" > release_windows

      - name: Generate targets
        run: cmake -B Builds -DCMAKE_PREFIX_PATH=./libtorch
      - name: build all target
        run: cmake --build Builds --config Release

      - name: Create release zip
        run: zip autoEffect${{ matrix.release_suffix }}sRelease.zip Builds/AutoEffect_artefacts/*

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.create_release.outputs.tag-name }}
          files: autoEffect${{ matrix.release_suffix }}sRelease.zip

#  MacOs:
#
#    runs-on: macos-latest
#
#    steps:
#    #checkout submodules
#    - uses: actions/checkout@v3
#      with:
#        ssh-key: ${{ secrets.SUBMODULE_CONTENT_PULL_KEY }}
#        submodules: 'recursive'
#    ##Building/Testing Part
#    - name: Download Libtorch
#      run: wget https://download.pytorch.org/libtorch/cpu/libtorch-macos-1.11.0.zip
#    - name: Unzip it
#      run: unzip libtorch-macos-1.11.0.zip
#    - name: Generate targets
#      run: cmake -B Builds -DCMAKE_PREFIX_PATH=./libtorch
#    - name: build all target
#      run: cmake --build Builds --config Release
#    - name: Running tests
#      run: ./Builds/Tests


#runs:
#  using: "composite"
#  steps:
#  - name: version
#    run: echo "::set-output name=version::$(cat VERSION.txt)"
#    id: version
#  - name: release
#    uses: actions/create-release@v1
#    id: create_release
#    with:
#      draft: false
#      prerelease: false
#      release_name: ${{ steps.version.outputs.version }}
#      tag_name: ${{ steps.version.outputs.version }}
#      body_path: CHANGELOG.md
#    env:
#      GITHUB_TOKEN: ${{ github.token }}
#  - name: Create release zip
#    run: zip autoEffectMacOsRelease.zip Builds/AutoEffect_artefacts/*
#  - name: upload MacOs release
#    uses: actions/upload-release-asset@v1
#    env:
#      GITHUB_TOKEN: ${{ github.token }}
#    with:
#      upload_url: ${{ steps.create_release.outputs.upload_url }}
#      asset_path: ./autoEffectMacOsRelease.zip
#      asset_name: autoEffectMacOsRelease.zip
#      asset_content_type: application/zip
#
#


#  Build_Linux:
#
#    runs-on: ubuntu-latest
#
#    steps:
#    - uses: actions/checkout@v3
#      with:
#        ssh-key: ${{ secrets.SUBMODULE_CONTENT_PULL_KEY }}
#        submodules: 'recursive'
#    - name: Download Libtorch
#      run: wget https://download.pytorch.org/libtorch/cpu/libtorch-cxx11-abi-shared-with-deps-1.11.0%2Bcpu.zip
#    - name: Unzip it
#      run: unzip libtorch-cxx11-abi-shared-with-deps-1.11.0+cpu.zip
#    - name: Install Prerequisites
#      run: sudo apt-get install libxcursor-dev libxrandr-dev libxinerama-dev libxi-dev libasound2-dev
#    - name: Generate targets
#      run: cmake -B Builds -DCMAKE_PREFIX_PATH=./libtorch
#    - name: build all target
#      run: cmake --build Builds --config Release
#    - name: Running tests
#      run: ./Builds/Tests
